//! Errors that can be generated by the updater
//!
//! We rewrap all the modules errors so the end coder can catch a fully enumerated list of errors

use serde_derive::{Deserialize, Serialize};
use thiserror::Error;

#[derive(Debug, Clone, Error, Deserialize, Serialize)]
pub enum ReplicantError {
  #[error("There was an error attempting to convert from one type to another")]
  ConversionError,

  #[error("An error that I haven't made a better bucket for")]
  GeneralError,

  #[error("The patch did not contain an expected value")]
  MissingValue,

  #[error("The patch did not set a key")]
  NoKeySet,

  #[error("There is no Replicant root with the given name")]
  UnknownReplicantRoot,

  #[error("The data did not fit the constraints")]
  ValidationError,
}

#[macro_export]
macro_rules! fhl_error {
  ($err_type:expr, $ctx:expr, $($y:expr),*) => {
    Err($err_type).context(format!($ctx $(, $y),*))
  }
}
